examples/python/batch_processing.py:67:16: BLE001 Do not catch blind exception: `Exception`
   |
65 |                 print(chunk, end="", flush=True)
66 |             print()
67 |         except Exception as e:
   |                ^^^^^^^^^ BLE001
68 |             print(f"Could not run inference on model {model.id}. Error: {e}")
   |

src/lmstrix/cli/main.py:23:5: PLR0912 Too many branches (15 > 12)
   |
23 | def _get_models_to_test(
   |     ^^^^^^^^^^^^^^^^^^^ PLR0912
24 |     registry: ModelRegistry,
25 |     test_all: bool,
   |

src/lmstrix/cli/main.py:297:16: BLE001 Do not catch blind exception: `Exception`
    |
295 |                 )
296 |
297 |         except Exception as e:
    |                ^^^^^^^^^ BLE001
298 |             console.print(f"[red]✗ Scan failed: {e}[/red]")
299 |             console.print("[yellow]Check that LM Studio is running and accessible.[/yellow]")
    |

src/lmstrix/cli/main.py:306:9: PLR0912 Too many branches (15 > 12)
    |
304 |         self.list()
305 |
306 |     def list(self, sort: str = "id", show: str | None = None, verbose: bool = False) -> None:
    |         ^^^^ PLR0912
307 |         """List all models from the registry with their test status.
    |

src/lmstrix/cli/main.py:521:9: PLR0912 Too many branches (14 > 12)
    |
519 |             console.print(f"[red]Inference failed: {result.error}[/red]")
520 |
521 |     def health(self, verbose: bool = False) -> None:
    |         ^^^^^^ PLR0912
522 |         """Check database health and backup status.
    |

src/lmstrix/cli/main.py:529:9: PLC0415 `import` should be at the top-level of a file
    |
527 |         setup_logging(verbose=verbose)
528 |
529 |         import json
    |         ^^^^^^^^^^^ PLC0415
530 |
531 |         from lmstrix.utils.paths import get_default_models_file
    |

src/lmstrix/cli/main.py:531:9: PLC0415 `import` should be at the top-level of a file
    |
529 |         import json
530 |
531 |         from lmstrix.utils.paths import get_default_models_file
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLC0415
532 |
533 |         models_file = get_default_models_file()
    |

src/lmstrix/cli/main.py:546:18: PTH123 `open()` should be replaced by `Path.open()`
    |
544 |         # Check if registry is valid JSON
545 |         try:
546 |             with open(models_file) as f:
    |                  ^^^^ PTH123
547 |                 json.load(f)
548 |             console.print("[green]✓ Registry file is valid JSON[/green]")
    |

src/lmstrix/cli/main.py:574:16: BLE001 Do not catch blind exception: `Exception`
    |
572 |                 console.print("[green]✓ All models pass integrity checks[/green]")
573 |
574 |         except Exception as e:
    |                ^^^^^^^^^ BLE001
575 |             console.print(f"[red]✗ Failed to load registry: {e}[/red]")
    |

src/lmstrix/cli/main.py:586:17: PLC0415 `import` should be at the top-level of a file
    |
585 |             for _i, backup_file in enumerate(backup_files[:5]):  # Show latest 5
586 |                 from datetime import datetime
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ PLC0415
587 |
588 |                 mtime = datetime.fromtimestamp(backup_file.stat().st_mtime)
    |

src/lmstrix/cli/main.py:593:26: PTH123 `open()` should be replaced by `Path.open()`
    |
591 |                 # Test if backup is valid
592 |                 try:
593 |                     with open(backup_file) as f:
    |                          ^^^^ PTH123
594 |                         json.load(f)
595 |                     status = "[green]✓[/green]"
    |

src/lmstrix/cli/main.py:596:17: E722 Do not use bare `except`
    |
594 |                         json.load(f)
595 |                     status = "[green]✓[/green]"
596 |                 except:
    |                 ^^^^^^ E722
597 |                     status = "[red]✗[/red]"
    |

src/lmstrix/core/context_tester.py:125:9: PLR0912 Too many branches (24 > 12)
    |
123 |             logger.warning(f"Failed to write to main log: {e}")
124 |
125 |     def _test_at_context(
    |         ^^^^^^^^^^^^^^^^ PLR0912
126 |         self: Self,
127 |         model_path: str,
    |

src/lmstrix/core/context_tester.py:125:9: PLR0915 Too many statements (86 > 50)
    |
123 |             logger.warning(f"Failed to write to main log: {e}")
124 |
125 |     def _test_at_context(
    |         ^^^^^^^^^^^^^^^^ PLR0915
126 |         self: Self,
127 |         model_path: str,
    |

src/lmstrix/core/context_tester.py:238:17: TRY300 Consider moving this statement to an `else` block
    |
236 |                 # Success - log and return
237 |                 self._log_result(log_path, result)
238 |                 return result
    |                 ^^^^^^^^^^^^^ TRY300
239 |
240 |             except ModelLoadError as e:
    |

src/lmstrix/core/context_tester.py:275:21: B025 try-except block with duplicate exception `ModelLoadError`
    |
273 |                 return result  # Don't retry load errors
274 |
275 |             except (ModelLoadError, InferenceError) as e:
    |                     ^^^^^^^^^^^^^^ B025
276 |                 is_timeout = "timed out" in str(e).lower()
    |

src/lmstrix/core/context_tester.py:484:9: PLR0912 Too many branches (18 > 12)
    |
482 |                 return
483 |
484 |     def _perform_binary_search(
    |         ^^^^^^^^^^^^^^^^^^^^^^ PLR0912
485 |         self: Self,
486 |         model: Model,
    |

src/lmstrix/core/context_tester.py:484:9: PLR0915 Too many statements (73 > 50)
    |
482 |                 return
483 |
484 |     def _perform_binary_search(
    |         ^^^^^^^^^^^^^^^^^^^^^^ PLR0915
485 |         self: Self,
486 |         model: Model,
    |

src/lmstrix/core/context_tester.py:712:9: PLR0912 Too many branches (15 > 12)
    |
710 |         return active_models, updated_models
711 |
712 |     def _perform_subsequent_passes(
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR0912
713 |         self: Self,
714 |         active_models: dict[str, Model],
    |

src/lmstrix/core/models.py:103:19: TRY003 Avoid specifying long messages outside the exception class
    |
101 |         """Validate context limit is reasonable."""
102 |         if not isinstance(v, int) or v <= 0:
103 |             raise ValueError("Context limit must be a positive integer")
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY003
104 |         if v > 10_000_000:  # 10M tokens seems unreasonable
105 |             raise ValueError(f"Context limit {v} seems unreasonably large")
    |

src/lmstrix/core/models.py:105:19: TRY003 Avoid specifying long messages outside the exception class
    |
103 |             raise ValueError("Context limit must be a positive integer")
104 |         if v > 10_000_000:  # 10M tokens seems unreasonable
105 |             raise ValueError(f"Context limit {v} seems unreasonably large")
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY003
106 |         return v
    |

src/lmstrix/core/models.py:113:19: TRY003 Avoid specifying long messages outside the exception class
    |
111 |         """Validate model size is reasonable."""
112 |         if not isinstance(v, int) or v < 0:
113 |             raise ValueError("Model size must be a non-negative integer")
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY003
114 |         return v
    |

src/lmstrix/core/models.py:174:13: TRY300 Consider moving this statement to an `else` block
    |
173 |             # Size should be reasonable
174 |             return not self.size < 0
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ TRY300
175 |         except Exception:
176 |             return False
    |

src/lmstrix/core/models.py:175:16: BLE001 Do not catch blind exception: `Exception`
    |
173 |             # Size should be reasonable
174 |             return not self.size < 0
175 |         except Exception:
    |                ^^^^^^^^^ BLE001
176 |             return False
    |

src/lmstrix/core/models.py:204:13: TRY300 Consider moving this statement to an `else` block
    |
202 |             shutil.copy2(self.models_file, backup_path)
203 |             logger.info(f"Created backup: {backup_path}")
204 |             return backup_path
    |             ^^^^^^^^^^^^^^^^^^ TRY300
205 |         except OSError as e:
206 |             logger.error(f"Failed to create backup: {e}")
    |

src/lmstrix/core/models.py:231:19: TRY003 Avoid specifying long messages outside the exception class
    |
229 |         """Validate and sanitize registry data before use."""
230 |         if not isinstance(data, dict):
231 |             raise ModelRegistryError("Registry data must be a dictionary")
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY003
232 |
233 |         # Ensure required structure
    |

src/lmstrix/core/models.py:238:19: TRY003 Avoid specifying long messages outside the exception class
    |
237 |         if not isinstance(data["llms"], dict):
238 |             raise ModelRegistryError("'llms' section must be a dictionary")
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY003
239 |
240 |         # Validate each model entry
    |

src/lmstrix/core/models.py:323:21: SIM102 Use a single `if` statement instead of nested `if` statements
    |
322 |                       # Parse datetime
323 | /                     if model_info.get("context_test_date"):
324 | |                         if isinstance(model_info["context_test_date"], str):
    | |____________________________________________________________________________^ SIM102
325 |                               model_info["context_test_date"] = datetime.fromisoformat(
326 |                                   model_info["context_test_date"],
    |
    = help: Combine `if` statements using `and`

src/lmstrix/core/models.py:391:17: TRY300 Consider moving this statement to an `else` block
    |
389 |                 # Reload from the recovered file
390 |                 self.load()
391 |                 return
    |                 ^^^^^^ TRY300
392 |
393 |             except Exception as e:
    |

src/lmstrix/core/models.py:393:20: BLE001 Do not catch blind exception: `Exception`
    |
391 |                 return
392 |
393 |             except Exception as e:
    |                    ^^^^^^^^^ BLE001
394 |                 logger.warning(f"Backup {backup_file} is also corrupted: {e}")
395 |                 continue
    |

src/lmstrix/core/models.py:413:19: TRY003 Avoid specifying long messages outside the exception class
    |
411 |             for model_path in invalid_models:
412 |                 logger.error(f"  Invalid model: {model_path}")
413 |             raise ModelRegistryError(f"Registry contains {len(invalid_models)} invalid models")
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY003
414 |
415 |         # Create backup before saving
    |

src/lmstrix/core/models.py:449:21: B904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from  in exception handling
    |
447 |                     json.loads(temp_file.read_text())
448 |                 except json.JSONDecodeError as e:
449 |                     raise ModelRegistryError(f"Generated JSON is invalid: {e}")
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ B904
450 |
451 |                 temp_file.rename(self.models_file)
    |

src/lmstrix/core/models.py:449:27: TRY003 Avoid specifying long messages outside the exception class
    |
447 |                     json.loads(temp_file.read_text())
448 |                 except json.JSONDecodeError as e:
449 |                     raise ModelRegistryError(f"Generated JSON is invalid: {e}")
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY003
450 |
451 |                 temp_file.rename(self.models_file)
    |

src/lmstrix/core/models.py:503:19: TRY003 Avoid specifying long messages outside the exception class
    |
501 |         # Validate the model before updating
502 |         if not model.validate_integrity():
503 |             raise ModelRegistryError(f"Model {model_path} failed integrity check")
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY003
504 |
505 |         self._models[model_path] = model
    |

src/lmstrix/core/models.py:512:19: TRY003 Avoid specifying long messages outside the exception class
    |
510 |         # Validate the model before updating
511 |         if not model.validate_integrity():
512 |             raise ModelRegistryError(f"Model {model.id} failed integrity check")
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ TRY003
513 |
514 |         # Find existing model by ID and update it
    |

src/lmstrix/loaders/model_loader.py:64:9: TRY300 Consider moving this statement to an `else` block
   |
62 |     try:
63 |         registry.save()
64 |         return save_path
   |         ^^^^^^^^^^^^^^^^ TRY300
65 |     except ModelRegistryError as e:
66 |         logger.error(f"Failed to save registry due to validation errors: {e}")
   |

src/lmstrix/loaders/model_loader.py:70:5: PLR0911 Too many return statements (8 > 6)
   |
70 | def _validate_discovered_model(model_data: dict) -> bool:
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ PLR0911
71 |     """Validate that discovered model data is reasonable before processing."""
72 |     try:
   |

src/lmstrix/loaders/model_loader.py:106:9: TRY300 Consider moving this statement to an `else` block
    |
104 |             return False
105 |
106 |         return True
    |         ^^^^^^^^^^^ TRY300
107 |
108 |     except Exception as e:
    |

src/lmstrix/loaders/model_loader.py:108:12: BLE001 Do not catch blind exception: `Exception`
    |
106 |         return True
107 |
108 |     except Exception as e:
    |            ^^^^^^^^^ BLE001
109 |         logger.warning(f"Error validating model data: {e}")
110 |         return False
    |

src/lmstrix/loaders/model_loader.py:175:9: TRY300 Consider moving this statement to an `else` block
    |
173 |             return None
174 |
175 |         return new_model
    |         ^^^^^^^^^^^^^^^^ TRY300
176 |
177 |     except Exception as e:
    |

src/lmstrix/loaders/model_loader.py:177:12: BLE001 Do not catch blind exception: `Exception`
    |
175 |         return new_model
176 |
177 |     except Exception as e:
    |            ^^^^^^^^^ BLE001
178 |         logger.error(f"Failed to create model from data {model_data.get('id', 'unknown')}: {e}")
179 |         return None
    |

src/lmstrix/loaders/model_loader.py:195:5: PLR0912 Too many branches (17 > 12)
    |
195 | def scan_and_update_registry(
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ PLR0912
196 |     rescan_failed: bool = False,
197 |     rescan_all: bool = False,
    |

src/lmstrix/loaders/model_loader.py:195:5: PLR0915 Too many statements (55 > 50)
    |
195 | def scan_and_update_registry(
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ PLR0915
196 |     rescan_failed: bool = False,
197 |     rescan_all: bool = False,
    |

src/lmstrix/loaders/model_loader.py:276:16: BLE001 Do not catch blind exception: `Exception`
    |
274 |                     errors_encountered += 1
275 |
276 |         except Exception as e:
    |                ^^^^^^^^^ BLE001
277 |             logger.error(f"Error processing model {model_data.get('id', 'unknown')}: {e}")
278 |             errors_encountered += 1
    |

src/lmstrix/loaders/model_loader.py:340:9: TRY300 Consider moving this statement to an `else` block
    |
338 |         registry.update_model(str(model.path), model)
339 |         logger.info(f"Successfully reset test data for {model.id}")
340 |         return True
    |         ^^^^^^^^^^^ TRY300
341 |
342 |     except Exception as e:
    |

src/lmstrix/loaders/model_loader.py:342:12: BLE001 Do not catch blind exception: `Exception`
    |
340 |         return True
341 |
342 |     except Exception as e:
    |            ^^^^^^^^^ BLE001
343 |         logger.error(f"Failed to reset test data for {model_identifier}: {e}")
344 |         return False
    |

tests/run_tests.py:23:14: S603 `subprocess` call: check for execution of untrusted input
   |
21 |     ]
22 |
23 |     result = subprocess.run(cmd, check=True)
   |              ^^^^^^^^^^^^^^ S603
24 |
25 |     if result.returncode == 0:
   |

tests/test_integration/test_cli_integration.py:10:30: N814 Camelcase `LMStrixCLI` imported as constant `CLI`
   |
 8 | from _pytest.capture import CaptureFixture
 9 |
10 | from lmstrix.cli.main import LMStrixCLI as CLI
   |                              ^^^^^^^^^^^^^^^^^ N814
11 | from lmstrix.cli.main import main
12 | from lmstrix.core.inference import InferenceResult
   |
